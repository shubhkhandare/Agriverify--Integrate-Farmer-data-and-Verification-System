--===== FUNCTION FOR TOTAL_LAND_AREA================================
SET SERVEROUTPUT ON
CREATE OR REPLACE FUNCTION LAND_AREA(f_id number)
RETURN NUMBER
IS

L_AREA NUMBER;

BEGIN
SELECT SUM(LAND_AREA) INTO L_AREA
FROM FARMER F JOIN LAND L
ON F.FARMER_ID = L.FARMER_ID
WHERE F.FARMER_ID = F_ID;

RETURN L_AREA;
END;

--- ==============FUNCTION FOR=========LOAN STATUS======
CREATE OR REPLACE FUNCTION LOAN_STATUS(FARMER_ID IN NUMBER)
RETURN VARCHAR2
IS 

CURSOR L_STAUS IS
SELECT LOAN_TYPE, L.LOAN_STATUS 
FROM FARMER F JOIN FINANCIAL_DETAILS FI
ON F.FARMER_ID = FI.FARMER_ID
JOIN LOAN L
ON FI.FINANCIAL_ID = L.FINANCIAL_ID;

L_STATUS LOAN.LOAN_STATUS%TYPE;
L_TYPE LOAN.LOAN_TYPE%TYPE;

BEGIN
FOR I IN L_STAUS
LOOP
L_TYPE := I.LOAN_TYPE;
L_STATUS := I.LOAN_STATUS;
END LOOP;
RETURN L_STATUS;
END;


SELECT LOAN_STATUS(102)
FROM DUAL;

SELECT LOAN_STATUS(1027)
FROM DUAL;


---=====FUNCTION FOR=INSURANCE ===
CREATE OR REPLACE FUNCTION INSRUNCE_STATUS (F_ID NUMBER)
RETURN VARCHAR2
IS 
STS VARCHAR2(30);

CURSOR I_CHECK IS
SELECT I.STATUS
FROM FARMER f JOIN LAND L
ON F.FARMER_ID = L.FARMER_ID
JOIN land_crop_allocation LCA
ON L.LAND_ID = LCA.LAND_ID
JOIN INSURANCE I
ON LCA.ALLOCATION_ID = I.ALLOCATION_ID

WHERE F.FARMER_ID = F_ID;

BEGIN
FOR I IN I_CHECK LOOP
STS := I.STATUS;

END LOOP;

RETURN STS;
END;


select INSRUNCE_STATUS(1022)
from dual;



---=====STORED PROCEDURE FOR SCEHME_ELIGIBILITY
SET SERVEROUT ON
CREATE OR REPLACE PROCEDURE SCEHME_ELIGIBILITY(F_ID NUMBER)
IS
L_STATUS VARCHAR2(200);
L_AREA NUMBER;
INSUR VARCHAR2(200);

FID NUMBER;
FNAME VARCHAR2(30);
LNAME VARCHAR2(30);

BEGIN
L_STATUS := LOAN_STATUS(F_ID);
L_AREA := LAND_AREA(F_ID);
INSUR := INSRUNCE_STATUS(F_ID);

SELECT FARMER_ID, FIRST_NAME, LAST_NAME INTO FID, FNAME, LNAME
FROM FARMER
WHERE FARMER_ID = F_ID;

IF ((L_AREA < 2.0) AND (UPPER(L_STATUS) = 'PAID')) AND (UPPER(INSUR) = 'ACTIVE')
    THEN 
    DBMS_OUTPUT.PUT_LINE('FARMER '||FID||' '||FNAME||' '||LNAME);
    DBMS_OUTPUT.PUT_LINE('TOTAL LAND AREA: '||L_AREA);
    DBMS_OUTPUT.PUT_LINE('LOAN STATUS: '||L_STATUS);
    DBMS_OUTPUT.PUT_LINE('INSURANCE STATUS: '||INSUR);
    DBMS_OUTPUT.PUT_LINE('FARMER IS ELIGIBLE');
ELSE
    DBMS_OUTPUT.PUT_LINE('FARMER '||FID||' '||FNAME||' '||LNAME);
    DBMS_OUTPUT.PUT_LINE('TOTAL LAND AREA: '||L_AREA);
    DBMS_OUTPUT.PUT_LINE('LOAN STATUS: '||L_STATUS);
    DBMS_OUTPUT.PUT_LINE('INSURANCE STATUS: '||INSUR);
    DBMS_OUTPUT.PUT_LINE('FARMER IS NOT ELIGIBLE');
END IF;

END;

--------
EXECUTE SCEHME_ELIGIBILITY(&FID);
------







select f.farmer_id , count(loan_id)
FROM FARMER F JOIN FINANCIAL_DETAILS FI
ON F.FARMER_ID = FI.FARMER_ID
JOIN LOAN L
ON FI.FINANCIAL_ID = L.FINANCIAL_ID
group by f.farmer_id
having count(loan_id)>1;

SELECT * FROM FARMER;
SELECT * FROM LAND;
SELECT * FROM land_crop_allocation;
select * from insurance;
select * from loan;